[tool.poetry]
name = "manifold"
version = "0.0.1"
description = ""
authors = ["Anomymous authors"]
readme = "README.md"
packages = [{include = "manifold"}, {include="experiment_utils"}, {include="experiment_data"}]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
jax = "^0.4.20"
jaxlib = "^0.4.20"
jaxtyping = "^0.2.23"
gpjax = "^0.8.0"
matplotlib = "^3.8.2"
adjusttext = "^1.0.4"
plotly = "^5.18.0"
scikit-learn = "^1.4.0"
pandas = "^2.2.0"
nltk = "^3.8.1"
tqdm = "^4.66.1"

[tool.poetry.group.test.dependencies]
pytest = "^7.2.2"
pytest-cov = "^4.0.0"
pytest-pretty = "^1.1.1"
pytest-xdist = "^3.2.1"
coverage = "^7.2.2"
absolufy-imports = "^0.3.1"
xdoctest = "^1.1.1"
mktestdocs = "^0.2.1"


[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
isort = "^5.12.0"
pylint = "^2.17.1"
nox = "^2022.11.21"
ruff = "^0.0.259"
pre-commit = "^3.2.2"
nbstripout = "^0.6.1"
pydocstyle = "^6.3.0"
codespell = "^2.2.4"
asv = "^0.6.0"
interrogate = "^1.5.0"
equinox = "^0.11.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black] # https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#configuration-via-a-file
line-length = 88
target-version = ["py310"]

[tool.pytest.ini_options] # https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
# addopts = "--color=yes --doctest-modules --exitfirst --failed-first --strict-config --strict-markers --typeguard-packages=my_package --verbosity=2 --junitxml=reports/pytest.xml"
filterwarnings = ["error", "ignore::DeprecationWarning"]
testpaths = ["manifold", "tests"]
xfail_strict = true

[tool.ruff] # https://github.com/charliermarsh/ruff
fix = true
cache-dir = "~/.cache/ruff"
dummy-variable-rgx = "^_$"
exclude = ["docs/"]
ignore-init-module-imports = true
line-length = 88
select = [
  # pyflakes
  "F",
  # pycodestyle
  "E",
  "W",
  # flake8-2020
  "YTT",
  # flake8-bugbear
  "B",
  # flake8-quotes
  "Q",
  # pylint
  "PLE",
  "PLR",
  "PLW",
  # misc lints
  "PIE",
  # flake8-pyi
  "PYI",
  # tidy imports
  "TID",
  # implicit string concatenation
  "ISC",
  # type-checking imports
  "TCH",
]
ignore = [
  # space before : (needed for how black formats slicing)
  # "E203",  # not yet implemented
  # module level import not at top of file
  "E402",
  # do not assign a lambda expression, use a def
  "E731",
  "E501",
  "PGH001",
  "RET504",
  "S101",
  "F722",
  'PLR2004',
  "PLR0913",
]
unfixable = ["ERA001", "F401", "F841", "T201", "T203"]
src = ["manifold", "experiment_utils", "experiment_data"]
target-version = "py38"

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"manifold/__init__.py" = ['I', 'F401', 'E402', 'D104']


[tool.isort]
profile = "black"
combine_as_imports = true
force_sort_within_sections = true
force_grid_wrap = 2
skip = 'docs'

[tool.coverage.report] # https://coverage.readthedocs.io/en/latest/config.html#report
fail_under = 50
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run] # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src"]

[tool.coverage.xml] # https://coverage.readthedocs.io/en/latest/config.html#xml
output = "reports/coverage.xml"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"

[tool.poetry-dynamic-versioning.substitution]
files = ["manifold/__init__.py"]
